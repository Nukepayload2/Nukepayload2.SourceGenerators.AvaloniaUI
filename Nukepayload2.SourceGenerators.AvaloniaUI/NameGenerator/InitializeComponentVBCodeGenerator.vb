Imports Avalonia.Generators.Common.Domain
Imports Avalonia.Generators.NameGenerator
Imports XamlX.TypeSystem

Friend Class InitializeComponentVBCodeGenerator
    Inherits InitializeComponentCodeGenerator

    Public Sub New(types As IXamlTypeSystem, avaloniaNameGeneratorAttachDevTools As Boolean)
        MyBase.New(types, avaloniaNameGeneratorAttachDevTools)
    End Sub

    Private Const AttachDevToolsCodeBlock = "
#If DEBUG Then
            If attachDevTools Then Me.AttachDevTools()
#End If
"
    Private Const AttachDevToolsParameterDocumentation =
        "        ''' <param name=""attachDevTools"">Should the dev tools be attached.</param>
"

    Public Overrides Function GenerateCode(className As String, nameSpaceName As String, xamlType As IXamlType, names As IEnumerable(Of ResolvedName)) As String
        Dim properties As New List(Of String)
        Dim initializations As New List(Of String)
        For Each resolvedName In names
            With resolvedName
                Dim typeName = GetVbTypeName(.XamlType)
                Dim modifier = CsModifierToVB(.CsFieldModifier)
                properties.Add($"{Space8}{modifier} WithEvents { .Name} As {typeName}")
                initializations.Add($"{Space12}{ .Name} = FindNameScope()?.Find(Of {typeName})(""{ .Name}"")")
            End With
        Next resolvedName

        Dim attachDevTools = DiagnosticsAreConnected AndAlso IsWindow(xamlType)
        Dim attachDevToolsParam = If(attachDevTools, ", Optional attachDevTools As Boolean = True", String.Empty)
        Dim attachDevToolsBody = If(attachDevTools, AttachDevToolsCodeBlock, String.Empty)
        Dim attachDevToolsXmlComment = If(attachDevTools, AttachDevToolsParameterDocumentation, String.Empty)

        Return $"' <auto-generated />
Imports Avalonia
Imports Avalonia.Controls
Imports Avalonia.Markup.Xaml

Namespace Global.{nameSpaceName}

    <Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated>
    Partial Class {className}

{String.Join(vbCrLf, properties)}

        ''' <summary>
        ''' This overload is used by the Visual Basic compiler to generate
        ''' call to this method in the default <see langword=""Sub""/> <see langword=""New""/>().
        ''' </summary>
        Private Sub InitializeComponent()
            InitializeComponent(loadXaml:=True)
        End Sub

        ''' <summary>
        ''' Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
        ''' </summary>
        ''' <param name=""loadXaml"">Should the XAML be loaded into the component.</param>
{attachDevToolsXmlComment}
        Public Sub InitializeComponent(Optional loadXaml As Boolean = True{attachDevToolsParam})
            If loadXaml Then
                AvaloniaXamlLoader.Load(Me)
            End If
{attachDevToolsBody}
{String.Join(vbCrLf, initializations)}
        End Sub

    End Class

End Namespace
"
    End Function


End Class
